% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multibergm.R
\name{multibergm}
\alias{multibergm}
\alias{multibergm.formula}
\alias{multibergm.multibergm}
\title{Fit multibergm to multiple networks}
\usage{
multibergm(object, ...)

\method{multibergm}{formula}(
  object,
  model_formula = ~1,
  constraints = ~.,
  main_iters = 1000L,
  model_matrix = get_model_matrix(object, model_formula),
  control = control_multibergm(object, model_formula, constraints),
  prior = set_priors(object, model_matrix, control),
  init = set_init(object, prior, model_matrix)
)

\method{multibergm}{multibergm}(object, main_iters = 1000)
}
\arguments{
\item{object}{A multibergm object, or a \R \code{\link{formula}} object,
of the form \code{y ~ <model terms>}, where \code{y} is a
\code{\link[network]{network}} object or a
\code{\link[ergm]{network.list}} object.}

\item{constraints}{A one-sided formula specifying one or more constraints
on the support of the distribution of the networks being simulated.}

\item{main_iters}{Number of (outer) MCMC iterations}

\item{control}{A list of parameters set by \code{\link{control_multibergm}}}
}
\value{
A list containing the following elements:
  \itemize{
    \item \code{networks} - to which the model was fit
    \item \code{ergm_formula} - specifying the ERGM
    \item \code{model_formula} - specifying the linear model relating network covariates to ERGM summary statistics
    \item \code{constraints} - used to fix any summary statistics
    \item \code{main_iters} - the number of MCMC iterations used
    \item \code{control} parameters used to fit the model
    \item \code{params} - list containing MCMC output for each variable
    \item \code{accepts} - list containing acceptance counts at each iteration
    }
}
\description{
Main function to fit a hierarchical framework of Bayesian exponential random
graph models to a population of networks. Each network \eqn{i} is modelled
as an ERGM with network-level parameters \eqn{\theta_i}, each of which come
from a common group- or population-level distribution. An
exchange-within-Gibbs algorithm is used to generate samples from the joint
posterior. The group memberships, priors, and other model fitting
hyperparameters are set through the \code{\link{control_multibergm}} function.
}
\section{Methods (by class)}{
\itemize{
\item \code{formula}: S3 method for class 'formula'

\item \code{multibergm}: S3 method for class 'multibergm', used to continue
generating posterior samples from a previous fit
}}

